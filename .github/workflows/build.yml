name: Build Fabric Mod

on:
  push:
    branches:
      - '**'  # Triggers on all branches
  pull_request:
    branches:
      - master
      - 'version/**'  # Also allow PRs to version branches
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Read version info from gradle.properties
        id: version
        run: |
          MOD_VERSION=$(grep "^mod_version=" gradle.properties | cut -d'=' -f2)
          MINECRAFT_VERSION=$(grep "^minecraft_version=" gradle.properties | cut -d'=' -f2)
          ARCHIVES_BASE_NAME=$(grep "^archives_base_name=" gradle.properties | cut -d'=' -f2)
          echo "mod_version=$MOD_VERSION" >> $GITHUB_OUTPUT
          echo "minecraft_version=$MINECRAFT_VERSION" >> $GITHUB_OUTPUT
          echo "archives_base_name=$ARCHIVES_BASE_NAME" >> $GITHUB_OUTPUT
          echo "Building: $ARCHIVES_BASE_NAME v$MOD_VERSION for Minecraft $MINECRAFT_VERSION"
      
      - name: Build with Gradle
        run: ./gradlew build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.version.outputs.archives_base_name }}-${{ steps.version.outputs.mod_version }}-mc${{ steps.version.outputs.minecraft_version }}-${{ github.ref_name }}
          path: build/libs/*.jar
          if-no-files-found: error
      
      - name: Upload to release (if tagged)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/*.jar
          name: Release ${{ steps.version.outputs.mod_version }} (MC ${{ steps.version.outputs.minecraft_version }})
          body: |
            ## ${{ steps.version.outputs.archives_base_name }} v${{ steps.version.outputs.mod_version }}
            
            **Minecraft Version:** ${{ steps.version.outputs.minecraft_version }}
            **Branch:** ${{ github.ref_name }}
            
            Built from commit: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

